{
  "name": "grunt-mock2easy",
  "description": "通过nodejs的服务实现ajax的跨域访问，利用mockjs动态生成json接口，模拟各种恶略环境测试系统是否健全，测试接口生成接口文档",
  "version": "0.3.5",
  "homepage": "https://github.com/appLhui/grunt-mock2easy",
  "author": {
    "name": "mofei",
    "email": "mofei.lh@alibaba-inc.com"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:appLhui/grunt-mock2easy.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test",
    "build": "browserify -t brfs ./tasks/web/app/app.js -o ./tasks/web/public/bundle.js"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "^0.9.2",
    "grunt-contrib-clean": "^0.5.0",
    "grunt-contrib-nodeunit": "^0.3.3",
    "grunt": "~0.4.0",
    "brfs": "^1.3.0",
    "browserify": "^5.11.1",
    "beefy": "^2.1.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "mock",
    "gruntplugin",
    "mockjs",
    "postman"
  ],
  "dependencies": {
    "colors": "~0.6.2",
    "mkdirp": "~0.5.0",
    "mockjs": "~0.1.4",
    "express": "~4.2.0",
    "static-favicon": "~1.0.0",
    "morgan": "~1.0.0",
    "cookie-parser": "~1.0.1",
    "body-parser": "~1.0.0",
    "debug": "~0.7.4",
    "jade": "~1.3.0",
    "q": "~1.0.1",
    "async": "~0.9.0",
    "jquery": "~2.1.1",
    "node.extend": "~1.1.0",
    "underscore": "~1.7.0"
  },
  "_id": "grunt-mock2easy@0.3.4",
  "_from": "grunt-mock2easy@",
  "bugs": {
    "url": "https://github.com/appLhui/grunt-mock2easy/issues"
  },
  "dist": {
    "shasum": "44d815e87623dd408612b39239de2e36f107009d",
    "size": 1417090,
    "noattachment": false,
    "key": "grunt-mock2easy/-/grunt-mock2easy-0.2.31.tgz",
    "tarball": "http://registry.npm.alibaba-inc.com/grunt-mock2easy/download/grunt-mock2easy-0.2.31.tgz"
  },
  "_npmVersion": "1.4.3",
  "_npmUser": {
    "name": "applelihui",
    "email": "lhui3it@gmail.com"
  },
  "maintainers": [
    {
      "name": "applelihui",
      "email": "lhui3it@gmail.com"
    },
    {
      "name": "liuyangbeta",
      "email": "liuyang@mrcoder.org"
    }
  ],
  "directories": {},
  "publish_time": 1419672078526,
  "_cnpm_publish_time": 1419672078526,
  "_shasum": "44d815e87623dd408612b39239de2e36f107009d",
  "_resolved": "http://registry.npm.alibaba-inc.com/grunt-mock2easy/download/grunt-mock2easy-0.2.31.tgz",
  "readmeFilename": "README.md",
  "readme": "# grunt-mock2easy\n\n> 通过nodejs的服务实现ajax的跨域访问，使用Curl获取接口，利用mockjs动态生成json接口，模拟多种服务器环境，测试接口并且生成接口文档\n\n## Demo\n\nclick [grunt-mock2easy-demo](https://github.com/appLhui/grunt-mock2easy-demo) \n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.5`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install express@3.4.8   // 一定要注意express的版本\nnpm install grunt-mock2easy --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-mock2easy');\n```\n\n## The \"mock2easy\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `mock2easy` to the data object passed into `grunt.initConfig()`.\n\n```js\n\n// 访问本地静态mock数据\ngrunt.initConfig({\n    mock2easy: {\n        test:{\n            options: {\n                port:3000,\n                lazyLoadTime:3000,  \n                database:'database',\n                doc:'doc',   \n                keepAlive:true,  // 是否独立运行\n                ignoreField:[],  // 默认忽略的接口入参\n            }\n        }\n   },\n});\n\n// 通过Curl访问服务端的接口数据\n\n mock2easy: {\n      test: {\n        options: {\n          port: 3334,\n          database: 'database',\n          keepAlive: false,\n          ignoreField: ['__preventCache', 'secToken'],\n          curl: {\n            domain: 'http://hello.console.demo.com',  // 域名\n            parameter: {                           // 每次请求需要带的参数\n              secToken: 'jimZPPU1MZtLmjFXnxCl22'\n            },\n            Cookie: 'kRm9JWrHB9%2B%2Bq84dcf4tLAUfECcVq5NknX2Rs9ic'\n          }\n        }\n      }\n    }\n\n```\n\n### Options\n\n#### options.port\n\nType: `Number`\n\nDefault value: 3000\n\n启动的服务的端口号 \n\n#### options.lazyLoadTime\n\nType: `Number`\n\nDefault value: 3000\n\n启动接口延时加载，调用接口的延迟时间 \n\n#### options.database\n\nType: `String`\n\nDefault value: `mock2easy`\n\n接口数据的生成位置\n\n#### options.doc\n\nType: `String`\n\nDefault value: `doc`\n\n接口文档的生成位置\n\n#### options.keepAlive\n\nType: `Boolean`\n\nDefault value: true\n\n默认为`true`，`true`时可以独立起一个服务提供接口，`false`时可以和别的grunt服务组合成为一个任务串\n\n\n#### options.curl\n\nType: `Object`\n\nDefault value: false\n\n默认为不写，如果写了的话优先于Curl请求，所有的接口将不再访问本地的mock数据，改为通过Curl访问服务端的接口\n\n#### options.ignoreField\n\nType: `Array`\n\nDefault value: []\n\n默认为[]，可以添加忽略的请求参数，例如：`__preventCache`等字段，可能不是我们想要的校验的参数\n\n\n## grunt-contrib-connect 实现ajax请求跨域\n\n修改 `Gruntfile.js` 中 connect的配置\n```js\n  \n  connect: {\n     server: {\n       options: {\n         middleware:  function(connect) {\n             return [\n               require('connect-livereload')(\n                 {port: globalSetting.liveReloadPort}\n               ),\n               require('./database/do')   //引入数据接口生成文件中的do.js脚本\n             ];\n           },\n       },\n     },\n   },\n\n```\n\n联调时只需要改变 `do.js` 中的  `hostname` 和 `port` 即可,\n\n\n\n## mockjs的支持\n\n文档生成默认在 `./doc/`,push 到 git 上可以直接查看\n\n支持所有的mockjs语法，[Mockjs语法样例](http://mockjs.com/demo/mock.html) \n\n如果有好的建议和意见请联系我：lhui3it@gmail.com\n\n[grunt-mock2easy-demo](https://github.com/appLhui/grunt-mock2easy-demo) \n\n## 基本界面\n\n![image](https://raw.githubusercontent.com/appLhui/grunt-mock2easy/master/img/index.png) \n\n\n![image](https://raw.githubusercontent.com/appLhui/grunt-mock2easy/master/img/detail.png) \n\n\n\n\n\n\n"
}
